# Generated by Django 5.0.4 on 2024-06-27 15:35

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('metrics', '0005_meteo_norm_model'),
        ('estimations', '0002_create_views'),
    ]

    operations = [
        migrations.RunSQL(
            sql=[(
                """
                CREATE OR REPLACE VIEW metrics_bulk_data_hydro_manual AS
                SELECT station_id,
                       timestamp_local::timestamp without time zone, -- Convert timestamp_local to timestamp without timezone
                       MAX(CASE WHEN metric_name = 'WLD' AND value_type = 'M' THEN avg_value END)   AS water_level_daily,
                       MAX(CASE WHEN metric_name = 'WLDA' AND value_type = 'E' THEN avg_value END)  AS water_level_daily_average,
                       MAX(CASE WHEN metric_name = 'WDD' AND value_type = 'M' THEN avg_value END)   AS discharge_measurement,
                       MAX(CASE WHEN metric_name = 'WDD' AND value_type = 'E' THEN avg_value END)   AS discharge_daily,
                       MAX(CASE WHEN metric_name = 'RCSA' AND value_type = 'M' THEN avg_value END)  AS free_river_area,
                       MAX(CASE WHEN metric_name = 'WDDCA' AND value_type = 'E' THEN avg_value END) AS decade_discharge,
                       MAX(CASE WHEN metric_name = 'WDDA' AND value_type = 'E' THEN avg_value END)  AS discharge_daily_average,
                       MAX(CASE
                               WHEN metric_name = 'IPO' AND value_type = 'M'
                                   THEN value_code || ':' || avg_value::text END)                   AS ice_phenomena,
                       MAX(CASE WHEN metric_name = 'WLDC' AND value_type = 'M' THEN avg_value END)  AS water_level_measurement,
                       MAX(CASE WHEN metric_name = 'WDFA' AND value_type = 'E' THEN avg_value END)  AS fiveday_discharge,
                              MAX(CASE WHEN metric_name = 'ATO' AND value_type = 'M' THEN avg_value END)  AS air_temperature,
                       MAX(CASE WHEN metric_name = 'WTO' AND value_type = 'M' THEN avg_value END)  AS water_temperature,
                       MAX(CASE
                               WHEN metric_name = 'PD' AND value_type = 'M'
                                   THEN value_code || ':' || avg_value::text END)                   AS precipitation_daily
                FROM (SELECT station_id, timestamp_local, metric_name, value_type, avg_value, value_code
                      FROM metrics_hydrologicalmetric
                      WHERE value_type = 'M'
                        and metric_name in ('WLD', 'RCSA', 'IPO', 'WTO', 'ATO', 'PD')
                      UNION ALL
                      SELECT station_id, timestamp_local, metric_name, value_type, avg_value, NULL as value_code
                      FROM estimations_water_discharge_daily
                      UNION ALL
                      SELECT station_id, timestamp_local, metric_name, value_type, avg_value, NULL as value_code
                      FROM estimations_water_level_daily_average
                      UNION ALL
                      SELECT station_id, timestamp_local, metric_name, value_type, avg_value, NULL as value_code
                      FROM estimations_water_discharge_daily_average
                      UNION ALL
                      SELECT station_id, timestamp_local, metric_name, value_type, avg_value, NULL as value_code
                      FROM estimations_water_discharge_fiveday_average
                      UNION ALL
                      SELECT station_id, timestamp_local, metric_name, value_type, avg_value, NULL as value_code
                      FROM estimations_water_discharge_decade_average) AS sub
                where station_id IN (select distinct id from stations_hydrologicalstation where station_type = 'M')
                GROUP BY station_id, timestamp_local::timestamp without time zone;
              """
            )],
            reverse_sql=[("drop view if exists metrics_bulk_data_hydro_manual;")],
        ),
        migrations.RunSQL(
            sql=[(
                """
                CREATE OR REPLACE VIEW metrics_bulk_data_meteo AS
                SELECT station_id,
                       timestamp_local::timestamp without time zone,
                       MAX(CASE WHEN metric_name = 'PDCA' AND value_type = 'M' THEN hydrological_round(value) END)  AS precipitation_decade_average,
                       MAX(CASE WHEN metric_name = 'PMA' AND value_type = 'M' THEN hydrological_round(value) END)   AS precipitation_month_average,
                       MAX(CASE WHEN metric_name = 'ATDCA' AND value_type = 'M' THEN hydrological_round(value) END) AS air_temperature_decade_average,
                       MAX(CASE WHEN metric_name = 'ATMA' AND value_type = 'M' THEN hydrological_round(value) END)  AS air_temperature_month_average
                FROM metrics_meteorologicalmetric GROUP BY station_id, timestamp_local::timestamp without time zone;
               """
            )],
            reverse_sql=[("drop view if exists metrics_bulk_data_meteo;")],
        ),

        migrations.RunSQL(
            sql=[(
                """
                CREATE OR REPLACE VIEW metrics_bulk_data_virtual AS
                            SELECT station_id,
                                   timestamp_local::timestamp without time zone,
                                   MAX(CASE WHEN metric_name = 'WDD' AND value_type = 'E' THEN avg_value END)   AS discharge_daily,
                                   MAX(CASE WHEN metric_name = 'WDDCA' AND value_type = 'E' THEN avg_value END) AS decade_discharge,
                                   MAX(CASE WHEN metric_name = 'WDDA' AND value_type = 'E' THEN avg_value END) AS discharge_daily_average,
                                   MAX(CASE WHEN metric_name = 'WDFA' AND value_type = 'E' THEN avg_value END)  AS fiveday_discharge
                            FROM (SELECT station_id, timestamp_local, metric_name, value_type, avg_value
                                  FROM estimations_water_discharge_daily_virtual
                                  UNION ALL
                                  SELECT station_id, timestamp_local, metric_name, value_type, avg_value
                                  FROM estimations_water_discharge_daily_average_virtual
                                  UNION ALL
                                  SELECT station_id, timestamp_local, metric_name, value_type, avg_value
                                  FROM estimations_water_discharge_fiveday_average_virtual
                                  UNION ALL
                                  SELECT station_id, timestamp_local, metric_name, value_type, avg_value
                                  FROM estimations_water_discharge_decade_average_virtual) AS sub
                            GROUP BY station_id, timestamp_local::timestamp without time zone;
               """
            )],
            reverse_sql=[("drop view if exists metrics_bulk_data_virtual;")],
        ),
        migrations.RunSQL(
            sql=[(
                """
                CREATE OR REPLACE VIEW metrics_bulk_data_hydro_auto AS
                SELECT station_id,
                       timestamp_local::timestamp without time zone,
                       MAX(CASE WHEN metric_name = 'WLD' AND value_type = 'A' THEN min_value END)   AS water_level_daily_min,
                       MAX(CASE WHEN metric_name = 'WLD' AND value_type = 'A' THEN avg_value END)   AS water_level_daily_average,
                       MAX(CASE WHEN metric_name = 'WLD' AND value_type = 'A' THEN max_value END)   AS water_level_daily_max,
                       MAX(CASE WHEN metric_name = 'ATO' AND value_type = 'A' THEN min_value END)   AS air_temperature_min,
                       MAX(CASE WHEN metric_name = 'ATO' AND value_type = 'A' THEN avg_value END)   AS air_temperature_average,
                       MAX(CASE WHEN metric_name = 'ATO' AND value_type = 'A' THEN max_value END)   AS air_temperature_max,
                       MAX(CASE WHEN metric_name = 'WTO' AND value_type = 'A' THEN min_value END)   AS water_temperature_min,
                       MAX(CASE WHEN metric_name = 'WTO' AND value_type = 'A' THEN avg_value END)   AS water_temperature_average,
                       MAX(CASE WHEN metric_name = 'WTO' AND value_type = 'A' THEN max_value END)   AS water_temperature_max,
                       MAX(CASE WHEN metric_name = 'WDDA' AND value_type = 'E' THEN avg_value END)  AS discharge_daily_average,
                       MAX(CASE WHEN metric_name = 'WDFA' AND value_type = 'E' THEN avg_value END)  AS fiveday_discharge,
                       MAX(CASE WHEN metric_name = 'WDDCA' AND value_type = 'E' THEN avg_value END) AS decade_discharge
                FROM (SELECT station_id, timestamp_local, metric_name, value_type, min_value, avg_value, max_value
                      FROM metrics_hydrologicalmetric
                      WHERE value_type = 'A'
                        and metric_name in ('WLD', 'WTO', 'ATO')
                      UNION ALL
                      SELECT station_id, timestamp_local, metric_name, value_type, min_value, avg_value, max_value
                      FROM estimations_water_discharge_daily_average
                      UNION ALL
                      SELECT station_id, timestamp_local, metric_name, value_type, min_value, avg_value, max_value
                      FROM estimations_water_discharge_fiveday_average
                      UNION ALL
                      SELECT station_id, timestamp_local, metric_name, value_type, min_value, avg_value, max_value
                      FROM estimations_water_discharge_decade_average) AS sub
                where station_id IN (select distinct id from stations_hydrologicalstation where station_type = 'A')
                GROUP BY station_id, timestamp_local::timestamp without time zone;
               """
            )],
            reverse_sql=[("drop view if exists metrics_bulk_data_hydro_auto;")],
        ),
    ]
