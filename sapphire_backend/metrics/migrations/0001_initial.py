# Generated by Django 5.0 on 2023-12-11 13:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("stations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AirTemperature",
            fields=[
                ("timestamp", models.DateTimeField(primary_key=True, serialize=False, verbose_name="Timestamp")),
                (
                    "minimum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Minimum value"
                    ),
                ),
                (
                    "average_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Average value"
                    ),
                ),
                (
                    "maximum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Maximum value"
                    ),
                ),
                ("unit", models.CharField(blank=True, max_length=20, verbose_name="Unit")),
                (
                    "value_type",
                    models.CharField(
                        choices=[
                            ("M", "Manual"),
                            ("A", "Automatic"),
                            ("C", "Calculated"),
                            ("I", "Imported"),
                            ("U", "Unknown"),
                        ],
                        default="U",
                        max_length=2,
                        verbose_name="Value type",
                    ),
                ),
                ("sensor_identifier", models.CharField(blank=True, max_length=50, verbose_name="Sensor identifier")),
                ("sensor_type", models.CharField(blank=True, max_length=50, verbose_name="Sensor type")),
                (
                    "hydro_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.hydrologicalstation",
                        verbose_name="Hydrological station",
                    ),
                ),
                (
                    "meteo_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.meteorologicalstation",
                        verbose_name="Meteorological station",
                    ),
                ),
            ],
            options={
                "verbose_name": "Air temperature metric",
                "verbose_name_plural": "Air temperature metrics",
                "indexes": [
                    models.Index(
                        models.F("hydro_station"),
                        models.F("meteo_station"),
                        models.OrderBy(models.F("timestamp"), descending=True),
                        name="air_temperature_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Precipitation",
            fields=[
                ("timestamp", models.DateTimeField(primary_key=True, serialize=False, verbose_name="Timestamp")),
                (
                    "minimum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Minimum value"
                    ),
                ),
                (
                    "average_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Average value"
                    ),
                ),
                (
                    "maximum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Maximum value"
                    ),
                ),
                ("unit", models.CharField(blank=True, max_length=20, verbose_name="Unit")),
                (
                    "value_type",
                    models.CharField(
                        choices=[
                            ("M", "Manual"),
                            ("A", "Automatic"),
                            ("C", "Calculated"),
                            ("I", "Imported"),
                            ("U", "Unknown"),
                        ],
                        default="U",
                        max_length=2,
                        verbose_name="Value type",
                    ),
                ),
                ("sensor_identifier", models.CharField(blank=True, max_length=50, verbose_name="Sensor identifier")),
                ("sensor_type", models.CharField(blank=True, max_length=50, verbose_name="Sensor type")),
                (
                    "hydro_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.hydrologicalstation",
                        verbose_name="Hydrological station",
                    ),
                ),
                (
                    "meteo_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.meteorologicalstation",
                        verbose_name="Meteorological station",
                    ),
                ),
            ],
            options={
                "verbose_name": "Precipitation metric",
                "verbose_name_plural": "Precipitation metrics",
                "indexes": [
                    models.Index(
                        models.F("hydro_station"),
                        models.F("meteo_station"),
                        models.OrderBy(models.F("timestamp"), descending=True),
                        name="precipitation_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="WaterDischarge",
            fields=[
                ("timestamp", models.DateTimeField(primary_key=True, serialize=False, verbose_name="Timestamp")),
                (
                    "minimum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Minimum value"
                    ),
                ),
                (
                    "average_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Average value"
                    ),
                ),
                (
                    "maximum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Maximum value"
                    ),
                ),
                ("unit", models.CharField(blank=True, max_length=20, verbose_name="Unit")),
                (
                    "value_type",
                    models.CharField(
                        choices=[
                            ("M", "Manual"),
                            ("A", "Automatic"),
                            ("C", "Calculated"),
                            ("I", "Imported"),
                            ("U", "Unknown"),
                        ],
                        default="U",
                        max_length=2,
                        verbose_name="Value type",
                    ),
                ),
                ("sensor_identifier", models.CharField(blank=True, max_length=50, verbose_name="Sensor identifier")),
                ("sensor_type", models.CharField(blank=True, max_length=50, verbose_name="Sensor type")),
                (
                    "hydro_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.hydrologicalstation",
                        verbose_name="Hydrological station",
                    ),
                ),
                (
                    "meteo_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.meteorologicalstation",
                        verbose_name="Meteorological station",
                    ),
                ),
            ],
            options={
                "verbose_name": "Water discharge metric",
                "verbose_name_plural": "Water discharge metrics",
                "indexes": [
                    models.Index(
                        models.F("hydro_station"),
                        models.F("meteo_station"),
                        models.OrderBy(models.F("timestamp"), descending=True),
                        name="water_discharge_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="WaterLevel",
            fields=[
                ("timestamp", models.DateTimeField(primary_key=True, serialize=False, verbose_name="Timestamp")),
                (
                    "minimum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Minimum value"
                    ),
                ),
                (
                    "average_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Average value"
                    ),
                ),
                (
                    "maximum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Maximum value"
                    ),
                ),
                ("unit", models.CharField(blank=True, max_length=20, verbose_name="Unit")),
                (
                    "value_type",
                    models.CharField(
                        choices=[
                            ("M", "Manual"),
                            ("A", "Automatic"),
                            ("C", "Calculated"),
                            ("I", "Imported"),
                            ("U", "Unknown"),
                        ],
                        default="U",
                        max_length=2,
                        verbose_name="Value type",
                    ),
                ),
                ("sensor_identifier", models.CharField(blank=True, max_length=50, verbose_name="Sensor identifier")),
                ("sensor_type", models.CharField(blank=True, max_length=50, verbose_name="Sensor type")),
                (
                    "hydro_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.hydrologicalstation",
                        verbose_name="Hydrological station",
                    ),
                ),
                (
                    "meteo_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.meteorologicalstation",
                        verbose_name="Meteorological station",
                    ),
                ),
            ],
            options={
                "verbose_name": "Water level metric",
                "verbose_name_plural": "Water level metrics",
                "indexes": [
                    models.Index(
                        models.F("hydro_station"),
                        models.F("meteo_station"),
                        models.OrderBy(models.F("timestamp"), descending=True),
                        name="water_level_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="WaterTemperature",
            fields=[
                ("timestamp", models.DateTimeField(primary_key=True, serialize=False, verbose_name="Timestamp")),
                (
                    "minimum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Minimum value"
                    ),
                ),
                (
                    "average_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Average value"
                    ),
                ),
                (
                    "maximum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Maximum value"
                    ),
                ),
                ("unit", models.CharField(blank=True, max_length=20, verbose_name="Unit")),
                (
                    "value_type",
                    models.CharField(
                        choices=[
                            ("M", "Manual"),
                            ("A", "Automatic"),
                            ("C", "Calculated"),
                            ("I", "Imported"),
                            ("U", "Unknown"),
                        ],
                        default="U",
                        max_length=2,
                        verbose_name="Value type",
                    ),
                ),
                ("sensor_identifier", models.CharField(blank=True, max_length=50, verbose_name="Sensor identifier")),
                ("sensor_type", models.CharField(blank=True, max_length=50, verbose_name="Sensor type")),
                (
                    "hydro_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.hydrologicalstation",
                        verbose_name="Hydrological station",
                    ),
                ),
                (
                    "meteo_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.meteorologicalstation",
                        verbose_name="Meteorological station",
                    ),
                ),
            ],
            options={
                "verbose_name": "Water temperature metric",
                "verbose_name_plural": "Water temperature metrics",
                "indexes": [
                    models.Index(
                        models.F("hydro_station"),
                        models.F("meteo_station"),
                        models.OrderBy(models.F("timestamp"), descending=True),
                        name="water_temperature_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="WaterVelocity",
            fields=[
                ("timestamp", models.DateTimeField(primary_key=True, serialize=False, verbose_name="Timestamp")),
                (
                    "minimum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Minimum value"
                    ),
                ),
                (
                    "average_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Average value"
                    ),
                ),
                (
                    "maximum_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True, verbose_name="Maximum value"
                    ),
                ),
                ("unit", models.CharField(blank=True, max_length=20, verbose_name="Unit")),
                (
                    "value_type",
                    models.CharField(
                        choices=[
                            ("M", "Manual"),
                            ("A", "Automatic"),
                            ("C", "Calculated"),
                            ("I", "Imported"),
                            ("U", "Unknown"),
                        ],
                        default="U",
                        max_length=2,
                        verbose_name="Value type",
                    ),
                ),
                ("sensor_identifier", models.CharField(blank=True, max_length=50, verbose_name="Sensor identifier")),
                ("sensor_type", models.CharField(blank=True, max_length=50, verbose_name="Sensor type")),
                (
                    "hydro_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.hydrologicalstation",
                        verbose_name="Hydrological station",
                    ),
                ),
                (
                    "meteo_station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="stations.meteorologicalstation",
                        verbose_name="Meteorological station",
                    ),
                ),
            ],
            options={
                "verbose_name": "Water velocity metric",
                "verbose_name_plural": "Water velocity metrics",
                "indexes": [
                    models.Index(
                        models.F("hydro_station"),
                        models.F("meteo_station"),
                        models.OrderBy(models.F("timestamp"), descending=True),
                        name="water_velocity_idx",
                    )
                ],
            },
        ),
    ]
